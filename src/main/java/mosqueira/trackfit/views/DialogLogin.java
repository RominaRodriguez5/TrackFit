/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package mosqueira.trackfit.views;

import at.favre.lib.crypto.bcrypt.BCrypt;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JOptionPane;
import mosqueira.trackfit.Main;
import mosqueira.trackfit.dataAccess.DataAccess;
import mosqueira.trackfit.dto.Usuaris;

/**
 *
 * @author Lulas
 */
public class DialogLogin extends javax.swing.JDialog {

    private Main mainFra;
    private DataAccess da = new DataAccess();
    private Usuaris loggedInUser;
    private JCheckBoxMenuItem darkMode;

    /**
     * Creates new form NewJDialog
     */
    public DialogLogin(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.mainFra = (Main) parent;
        setLocationRelativeTo(this);
        addIcons();
    }

    // Añade iconos a los elementos visuales
    private void addIcons() {
        Email.setIcon(resizeIcon("/images/email_icon.png", 50, 50));
        Password.setIcon(resizeIcon("/images/password_icon.png", 50, 50));
        botonAcceso.setIcon(resizeIcon("/images/login_icon.png", 80, 80));
        jMenufile.setIcon(resizeIcon("/images/file_icon.png", 16, 16));
        jMenuReturn.setIcon(resizeIcon("/images/return_icon.png", 16, 16));
        jMenuEdit.setIcon(resizeIcon("/images/edit_icon.png", 16, 16));

        // Inicializar el checkbox "Modo oscuro"
        darkMode = new JCheckBoxMenuItem("Modo oscuro");
        darkMode.setState(
                false); // Inicialmente desactivado
        darkMode.addActionListener(e
                -> {
            boolean isDarkMode = darkMode.getState(); 
            applyDarkMode(isDarkMode); 
        }
        );

        jMenuEdit.add(darkMode);
    }

    private void applyDarkMode(boolean isDarkMode) {
        if (isDarkMode) {
            // Cambia el fondo y los colores al tema oscuro
            jPanel1.setBackground(java.awt.Color.DARK_GRAY);
            txtEmail.setBackground(java.awt.Color.GRAY);
            txtPassword.setBackground(java.awt.Color.GRAY);
            txtEmail.setForeground(java.awt.Color.WHITE);
            txtPassword.setForeground(java.awt.Color.WHITE);
        } else {
            // Restaura el fondo y los colores al tema claro
            jPanel1.setBackground(java.awt.Color.WHITE);
            txtEmail.setBackground(java.awt.Color.WHITE);
            txtPassword.setBackground(java.awt.Color.WHITE);
            txtEmail.setForeground(java.awt.Color.BLACK);
            txtPassword.setForeground(java.awt.Color.BLACK);
        }
        jPanel1.repaint(); // Refresca la interfaz
    }

    public Usuaris getLoggedInUser() {
        return loggedInUser;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botonAcceso = new javax.swing.JButton();
        Password = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblInfoMessage = new javax.swing.JLabel();
        Email = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jMenuBarLogin = new javax.swing.JMenuBar();
        jMenufile = new javax.swing.JMenu();
        jMenuReturn = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(java.awt.Color.black);
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(700, 600));
        setModal(true);
        setPreferredSize(new java.awt.Dimension(500, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(249, 249, 231));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setForeground(new java.awt.Color(255, 255, 153));
        jPanel1.setMinimumSize(new java.awt.Dimension(700, 600));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 600));
        jPanel1.setLayout(null);

        botonAcceso.setBorder(null);
        botonAcceso.setBorderPainted(false);
        botonAcceso.setContentAreaFilled(false);
        botonAcceso.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonAcceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAccesoActionPerformed(evt);
            }
        });
        jPanel1.add(botonAcceso);
        botonAcceso.setBounds(290, 400, 100, 90);
        botonAcceso.getAccessibleContext().setAccessibleParent(botonAcceso);

        Password.setFont(new java.awt.Font("SansSerif", 3, 14)); // NOI18N
        Password.setForeground(new java.awt.Color(255, 153, 102));
        Password.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Password.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/password_icon.png"))); // NOI18N
        Password.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.add(Password);
        Password.setBounds(160, 320, 70, 50);

        txtPassword.setText("string");
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        jPanel1.add(txtPassword);
        txtPassword.setBounds(290, 330, 100, 22);
        jPanel1.add(lblInfoMessage);
        lblInfoMessage.setBounds(10, 350, 0, 0);

        Email.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Email.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/email_icon.png"))); // NOI18N
        Email.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(Email);
        Email.setBounds(150, 230, 80, 60);

        txtEmail.setText("a@b.c");
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        jPanel1.add(txtEmail);
        txtEmail.setBounds(290, 250, 100, 22);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 153, 51)));
        jLabel1.setPreferredSize(new java.awt.Dimension(150, 150));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(240, 50, 180, 160);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, -30, 690, 580);

        jMenufile.setText("File");
        jMenufile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenufileActionPerformed(evt);
            }
        });

        jMenuReturn.setText("Return...");
        jMenuReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuReturnActionPerformed(evt);
            }
        });
        jMenufile.add(jMenuReturn);

        jMenuBarLogin.add(jMenufile);

        jMenuEdit.setText("Edit");
        jMenuBarLogin.add(jMenuEdit);

        setJMenuBar(jMenuBarLogin);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void botonAccesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAccesoActionPerformed
        try {
            // Obtiene el usuario desde el acceso de datos usando el email ingresado
            Usuaris usuari = da.getUser(txtEmail.getText());
            if (usuari != null && usuari.isInstructor()) {
                // Comprobar contraseña
                char[] passwordToVerify = txtPassword.getPassword();
                String userPasswordHashDataBase = usuari.getPasswordHash();
                var result = BCrypt.verifyer().verify(passwordToVerify, userPasswordHashDataBase);
                if (result.verified) {
                    loggedInUser = usuari;
                    // Si la verificación es correcta
                    JOptionPane.showMessageDialog(this, "Login successful. Welcome " + usuari.getNom());
                    mainFra.showListFrame(loggedInUser);
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Error: Invalid password");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Error: User not found or not an instructor");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error Access: " + e.getMessage());
        }
    }//GEN-LAST:event_botonAccesoActionPerformed

    private void jMenufileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenufileActionPerformed
        jMenuEdit.add(darkMode);
    }//GEN-LAST:event_jMenufileActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void jMenuReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuReturnActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jMenuReturnActionPerformed
    private ImageIcon resizeIcon(String path, int width, int height) {
        ImageIcon icon = new ImageIcon(getClass().getResource(path));
        Image image = icon.getImage();
        Image newImage = image.getScaledInstance(width, height, java.awt.Image.SCALE_SMOOTH);
        return new ImageIcon(newImage);
    }

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Email;
    private javax.swing.JLabel Password;
    private javax.swing.JButton botonAcceso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBarLogin;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenuItem jMenuReturn;
    private javax.swing.JMenu jMenufile;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblInfoMessage;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables

}
