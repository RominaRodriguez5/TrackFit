/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mosqueira.trackfit;

import java.awt.Color;
import java.awt.Image;
import java.awt.MediaTracker;
import javax.swing.ImageIcon;
import javax.swing.JCheckBoxMenuItem;
import mosqueira.trackfit.views.ListPanelUsuariosAsignados;
import javax.swing.JOptionPane;
import mosqueira.trackfit.dto.Usuaris;
import mosqueira.trackfit.views.DialogLogin;

/**
 *
 * @author Lulas
 */
public class Main extends javax.swing.JFrame {

    private ListPanelUsuariosAsignados listF;
    private Usuaris instructor;
    private JCheckBoxMenuItem darkMode;

    public Main() {
        initComponents();
        this.setSize(800, 800);
        jPanelMain.setBounds(0, 0, 900, 800);
        getContentPane().add(jPanelMain);
        setLocationRelativeTo(this);
//        repaint(); 

        // Crear un ícono para el botón Access
        ImageIcon accessIcon = resizeIcon("/images/access_icon1.png", 100, 100); // Redimensionamos el ícono
        IraDialogo.setIcon(accessIcon);
        // Redimensionar iconos en el menú "File"
        jMenuFile.setIcon(resizeIcon("/images/file_icon.png", 16, 16));
        jMenuExit.setIcon(resizeIcon("/images/exit_icon.png", 16, 16));
        logout.setIcon(resizeIcon("/images/logout_icon.png", 16, 16));
        jMenuHelp.setIcon(resizeIcon("/images/help_icon.png", 16, 16));
        jMenuItem1.setIcon(resizeIcon("/images/about_icon.png", 16, 16));
        jMenuWeb.setIcon(resizeIcon("/images/web_icon.png", 16, 16)); // Asignamos el ícono al ítem
        // Opción "Dark Mode"
        darkMode = new JCheckBoxMenuItem("Modo oscuro");
        darkMode.addActionListener(evt -> toggleDarkMode());
        jMenuHelp.add(darkMode);
    }

    public void showListFrame(Usuaris u) {
        this.instructor = u;
        getContentPane().removeAll();
        // Crear el panel ListUsers y pasarlo al marco
        listF = new ListPanelUsuariosAsignados(this, instructor, isDarkModeEnabled());
        listF.setBounds(0, 0, 900, 800); // Definir las posiciones y tamaños manualmente
        // Agregar el panel de usuarios
        getContentPane().add(listF);
        listF.revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new javax.swing.JPanel();
        jlogo = new javax.swing.JLabel();
        IraDialogo = new javax.swing.JButton();
        jMenuFrame = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuExit = new javax.swing.JMenuItem();
        logout = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuWeb = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.darkGray);
        setMinimumSize(new java.awt.Dimension(700, 600));
        setPreferredSize(new java.awt.Dimension(700, 600));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanelMain.setBackground(new java.awt.Color(249, 249, 231));
        jPanelMain.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelMain.setForeground(new java.awt.Color(249, 249, 231));
        jPanelMain.setMinimumSize(new java.awt.Dimension(700, 600));
        jPanelMain.setPreferredSize(new java.awt.Dimension(700, 600));
        jPanelMain.setRequestFocusEnabled(false);
        jPanelMain.setLayout(null);

        jlogo.setBackground(new java.awt.Color(191, 154, 207));
        jlogo.setForeground(new java.awt.Color(204, 204, 255));
        jlogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        jPanelMain.add(jlogo);
        jlogo.setBounds(300, 110, 180, 200);

        IraDialogo.setBackground(new java.awt.Color(255, 255, 255));
        IraDialogo.setBorder(null);
        IraDialogo.setBorderPainted(false);
        IraDialogo.setContentAreaFilled(false);
        IraDialogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IraDialogoActionPerformed(evt);
            }
        });
        jPanelMain.add(IraDialogo);
        IraDialogo.setBounds(350, 410, 90, 80);

        getContentPane().add(jPanelMain);
        jPanelMain.setBounds(0, -20, 810, 750);

        jMenuFrame.setBackground(new java.awt.Color(255, 255, 255));
        jMenuFrame.setBorder(null);
        jMenuFrame.setForeground(new java.awt.Color(255, 153, 51));

        jMenuFile.setBackground(new java.awt.Color(255, 153, 102));
        jMenuFile.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuFile.setText("File");
        jMenuFile.setMinimumSize(new java.awt.Dimension(652, 395));
        jMenuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileActionPerformed(evt);
            }
        });

        jMenuExit.setText("Exit");
        jMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuExit);

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        jMenuFile.add(logout);

        jMenuFrame.add(jMenuFile);

        jMenuHelp.setBackground(new java.awt.Color(255, 153, 102));
        jMenuHelp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuHelp.setText("Help");

        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItem1);

        jMenuFrame.add(jMenuHelp);

        jMenuWeb.setBackground(new java.awt.Color(255, 153, 51));
        jMenuWeb.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuWeb.setText("Web");
        jMenuWeb.setMinimumSize(new java.awt.Dimension(29, 20));
        jMenuWeb.setPreferredSize(new java.awt.Dimension(29, 20));
        jMenuWeb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuWebMouseClicked(evt);
            }
        });
        jMenuFrame.add(jMenuWeb);

        setJMenuBar(jMenuFrame);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileActionPerformed
        // Asignar icono redimensionado al menú
        System.exit(0);
    }//GEN-LAST:event_jMenuFileActionPerformed

    private void jMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExitActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jMenuExitActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        getContentPane().add(jPanelMain);
        jPanelMain.setVisible(true);
        listF.setVisible(false);
        JOptionPane.showMessageDialog(this, "Logout successful", "Logout", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_logoutActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Asignar icono redimensionado al menú
        ImageIcon icon = resizeIcon("/images/about_icon.png", 20, 20); // 20x20 es el tamaño deseado
        JOptionPane.showMessageDialog(this,
                "Developed by Romina Marlene Mosqueira Rodriguez\n"
                + "Course: 2º DAM \n"
                + "Resources used:\n"
                + "- Logo: Canva\n"
                + "- Other resources: Teacher, Classmates, ChatGPT",
                "About",
                JOptionPane.INFORMATION_MESSAGE,
                icon);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void IraDialogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IraDialogoActionPerformed
        // Crear el cuadro de diálogo para el inicio de sesión
        DialogLogin iraDialogo = new DialogLogin(this, true);
        iraDialogo.setVisible(true);
    }//GEN-LAST:event_IraDialogoActionPerformed

    private void jMenuWebMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuWebMouseClicked
        // Crear el ítem de menú para "Visitar nuestro sitio web"
        try {
            String url = "http://www.ejemplo.com/"; // Cambia esta URL por la de tu sitio web
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(url)); // Abre la URL en el navegador predeterminado
        } catch (Exception e) {
            e.printStackTrace(); // Manejo de errores si no se puede abrir el sitio
        }
    }//GEN-LAST:event_jMenuWebMouseClicked

    private void toggleDarkMode() {
        if (darkMode.isSelected()) {
            // Cambiar colores a modo oscuro
            jPanelMain.setBackground(Color.DARK_GRAY);
            jPanelMain.setForeground(Color.WHITE);
        } else {
            // Cambiar colores a modo claro
            jPanelMain.setBackground(new Color(249, 249, 231));
            jPanelMain.setForeground(Color.BLACK);
        }
        // Si existe listF, aplicar el modo oscuro también allí
        if (listF != null) {
            listF.applyDarkMode(darkMode.isSelected());
        }
    }

   private ImageIcon resizeIcon(String path, int width, int height) {
        ImageIcon icon = new ImageIcon(getClass().getResource(path));
        Image image = icon.getImage();
        Image newImage = image.getScaledInstance(width, height, java.awt.Image.SCALE_SMOOTH);
        return new ImageIcon(newImage);
    }

    public boolean isDarkModeEnabled() {
        return darkMode.isSelected();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton IraDialogo;
    private javax.swing.JMenuItem jMenuExit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuBar jMenuFrame;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenu jMenuWeb;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JLabel jlogo;
    private javax.swing.JMenuItem logout;
    // End of variables declaration//GEN-END:variables

}
