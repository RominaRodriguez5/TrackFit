package mosqueira.trackfit;

import mosqueira.trackfit.views.ThemeManager;
import java.awt.BorderLayout;
import javax.swing.ImageIcon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JFrame;
import mosqueira.trackfit.views.PanelUsuariosAsignados;
import javax.swing.JOptionPane;
import mosqueira.trackfit.dto.Usuaris;
import mosqueira.trackfit.views.DialogLogin;
import net.miginfocom.swing.MigLayout;

/**
 *
 * @author Romina Mosqueira
 */
public class Main extends javax.swing.JFrame {

    private PanelUsuariosAsignados listF;
    private Usuaris instructor;
    private JCheckBoxMenuItem darkMode;

    public Main() {
        initComponents();
        setupWindow();
        setupIconsAndMenus();
    }

    public void setupWindow() {
        setLocationRelativeTo(this); // Centra la ventana
        setSize(900, 600);
        jPanelMain.setLayout(new MigLayout("wrap, align center", "[center]", "[][]40[]"));
        jPanelMain.add(jlogo, "align center, gaptop 50");
        jPanelMain.add(IraDialogo, "align center, gaptop 50");
        // Añadir jPanelMain al centro del contenedor principal
        getContentPane().add(jPanelMain, BorderLayout.CENTER);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPanelMain.revalidate();
                jPanelMain.repaint();
            }
        });
        // Agregar un listener para la confirmación de salida
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                confirmExit();
            }
        });
    }

    private void confirmExit() {
        int option = JOptionPane.showConfirmDialog(Main.this,
                "¿Estás seguro de que deseas salir?", "Confirmar salida",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (option == JOptionPane.YES_OPTION) {
            // Si selecciona "Sí", cierra la aplicación
            System.exit(0);
        } else {
           
            setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        }
    }

    private void setupIconsAndMenus() {
        // Configurar ítems del menú de archivo
        jMenuExit.addActionListener(this::jMenuExitActionPerformed);
        logout.addActionListener(this::logoutActionPerformed);

        // Configurar ítems del menú de ayuda
        jMenuItem1.addActionListener(this::jMenuItem1ActionPerformed);

        // Configurar ítem de modo oscuro
        darkMode = new JCheckBoxMenuItem("Modo oscuro");
        darkMode.addActionListener(evt -> toggleTheme());
        jMenuHelp.add(darkMode); // Añadir al menú de ayuda

        // Configurar íconos para los botones y menús
        IraDialogo.setIcon(ThemeManager.resizeIcon("/images/access_icon1.png", 100, 100));
        jlogo.setIcon(ThemeManager.resizeIcon("/images/logo.png", 250, 180));
    }

    public void showListFrame(Usuaris u) {
        this.instructor = u;
        getContentPane().removeAll();  // Limpiar contenido actual
        getContentPane().setLayout(new BorderLayout()); // Mantener layout flexible

        listF = new PanelUsuariosAsignados(this, instructor, isDarkModeEnabled());

        getContentPane().add(listF, BorderLayout.CENTER); // Asegurar que ocupa todo el espacio

        // Redibujar la ventana para que se apliquen los cambios
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new javax.swing.JPanel();
        IraDialogo = new javax.swing.JButton();
        jlogo = new javax.swing.JLabel();
        jMenuFrame = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuExit = new javax.swing.JMenuItem();
        logout = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuWeb = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.darkGray);
        setMinimumSize(new java.awt.Dimension(700, 600));

        jPanelMain.setBackground(new java.awt.Color(249, 249, 231));
        jPanelMain.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelMain.setForeground(new java.awt.Color(249, 249, 231));
        jPanelMain.setPreferredSize(new java.awt.Dimension(900, 900));
        jPanelMain.setRequestFocusEnabled(false);
        jPanelMain.setLayout(null);

        IraDialogo.setBackground(new java.awt.Color(255, 255, 255));
        IraDialogo.setToolTipText("");
        IraDialogo.setBorder(null);
        IraDialogo.setBorderPainted(false);
        IraDialogo.setContentAreaFilled(false);
        IraDialogo.setDefaultCapable(false);
        IraDialogo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        IraDialogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IraDialogoActionPerformed(evt);
            }
        });
        jPanelMain.add(IraDialogo);
        IraDialogo.setBounds(540, 340, 180, 120);

        jlogo.setBackground(new java.awt.Color(191, 154, 207));
        jlogo.setForeground(new java.awt.Color(204, 204, 255));
        jlogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        jlogo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jlogo.setRequestFocusEnabled(false);
        jlogo.setVerifyInputWhenFocusTarget(false);
        jlogo.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanelMain.add(jlogo);
        jlogo.setBounds(500, 90, 250, 180);

        getContentPane().add(jPanelMain, java.awt.BorderLayout.CENTER);

        jMenuFrame.setBackground(new java.awt.Color(255, 255, 255));
        jMenuFrame.setBorder(null);
        jMenuFrame.setForeground(new java.awt.Color(255, 153, 51));

        jMenuFile.setBackground(new java.awt.Color(255, 153, 102));
        jMenuFile.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuFile.setText("File");
        jMenuFile.setMinimumSize(new java.awt.Dimension(652, 395));
        jMenuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileActionPerformed(evt);
            }
        });

        jMenuExit.setText("Exit");
        jMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuExit);

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        jMenuFile.add(logout);

        jMenuFrame.add(jMenuFile);

        jMenuHelp.setBackground(new java.awt.Color(255, 153, 102));
        jMenuHelp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuHelp.setText("Help");

        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItem1);

        jMenuFrame.add(jMenuHelp);

        jMenuWeb.setBackground(new java.awt.Color(255, 153, 51));
        jMenuWeb.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuWeb.setText("Web");
        jMenuWeb.setMinimumSize(new java.awt.Dimension(29, 20));
        jMenuWeb.setPreferredSize(new java.awt.Dimension(29, 20));
        jMenuWeb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuWebMouseClicked(evt);
            }
        });
        jMenuFrame.add(jMenuWeb);

        setJMenuBar(jMenuFrame);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileActionPerformed
        // Asignar icono redimensionado al menú
    }//GEN-LAST:event_jMenuFileActionPerformed

    private void jMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExitActionPerformed
        confirmExit();
    }//GEN-LAST:event_jMenuExitActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        getContentPane().add(jPanelMain);
        jPanelMain.setVisible(true);
        listF.setVisible(false);
    }//GEN-LAST:event_logoutActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Asignar icono redimensionado al menú
        ImageIcon icon = ThemeManager.resizeIcon("/images/about_icon.png", 20, 20); // 20x20 es el tamaño deseado
        JOptionPane.showMessageDialog(this,
                "Developed by Romina Marlene Mosqueira Rodriguez\n"
                + "Course: 2º DAM \n"
                + "Resources used:\n"
                + "- Logo: Canva\n"
                + "- Other resources: Teacher, Classmates, ChatGPT",
                "About",
                JOptionPane.INFORMATION_MESSAGE,
                icon);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void IraDialogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IraDialogoActionPerformed
        DialogLogin iraDialogo = new DialogLogin(this, true);
        iraDialogo.applyDarkMode(isDarkModeEnabled());
        iraDialogo.setVisible(true);

    }//GEN-LAST:event_IraDialogoActionPerformed

    private void jMenuWebMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuWebMouseClicked
        // Crear el ítem de menú para "Visitar nuestro sitio web"
        try {
            String url = "http://www.ejemplo.com/"; // Cambia esta URL por la de tu sitio web
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(url)); // Abre la URL en el navegador predeterminado
        } catch (Exception e) {
            e.printStackTrace(); // Manejo de errores si no se puede abrir el sitio
        }
    }//GEN-LAST:event_jMenuWebMouseClicked
    private void toggleTheme() {
        // Verificar si el modo oscuro está activado
        boolean isDarkMode = darkMode.isSelected();
        // Aplicar el tema en base a la selección
        applyTheme(isDarkMode);
    }

    public void applyTheme(boolean isDarkMode) {
        if (isDarkMode) {
            // Aplicar modo oscuro a todos los paneles
            ThemeManager.applyDarkMode(jPanelMain);
            // Aplicar modo oscuro a otros componentes
            ThemeManager.applyDarkModeToComponents(jlogo, IraDialogo, jMenuFile, jMenuExit, logout, jMenuHelp, jMenuItem1, jMenuWeb);
        } else {
            // Aplicar modo claro a todos los paneles
            ThemeManager.applyLightMode(jPanelMain);
            // Aplicar modo claro a otros componentes
            ThemeManager.applyLightModeToComponents(jlogo, IraDialogo, jMenuFile, jMenuExit, logout, jMenuHelp, jMenuItem1, jMenuWeb);
        }
    }

    public boolean isDarkModeEnabled() {
        // Retornar si el checkbox de modo oscuro está seleccionado
        return darkMode.isSelected();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton IraDialogo;
    private javax.swing.JMenuItem jMenuExit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuBar jMenuFrame;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenu jMenuWeb;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JLabel jlogo;
    private javax.swing.JMenuItem logout;
    // End of variables declaration//GEN-END:variables

}
